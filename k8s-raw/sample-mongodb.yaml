apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb-dev
spec:
  replicas: 1
  serviceName: mongodb
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: mongodb-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/instance: mongodb-dev
    spec:
      containers:
        - name: mongodb-server
          image: mongo:4.4.6
          imagePullPolicy: IfNotPresent
          ports:
            - name: mongo
              containerPort:  27017
              protocol: TCP
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: example
          volumeMounts:
            - name: pvc-data-volume
              mountPath: /data/db
      volumes:
        - name: pvc-data-volume
          persistentVolumeClaim:
            claimName: mongodb-pvc-data
      imagePullSecrets: []
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc-data
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb-dev
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb-dev
spec:
  type: LoadBalancer
  ports:
    - name: mongo
      port: 27017
      targetPort: 27017
      protocol: TCP
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb-dev
